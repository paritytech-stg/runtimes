name: Bench

on:
  workflow_dispatch:
  pull_request:

permissions: # allow the action to comment on the PR
  contents: write
  issues: write
  pull-requests: write

jobs:
  bench:
    runs-on: arc-runners-beefy-stg
    steps:
      - name: Install updates and protobuf-compiler
        run: sudo apt update && sudo apt install --assume-yes cmake protobuf-compiler curl

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set rust version via common env file
        run: cat .github/env >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "wasm32-unknown-unknown"
          components: "rust-src"
          toolchain: "nightly-${{env.RUST_NIGHTLY_VERSION}}"

      - name: Setup Cache
        uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2.7.0
        with:
          shared-key: "fellowship-cmd"

      - name: Install dependencies
        run: cargo install subweight frame-omni-bencher

      - name: Generate a token
        id: commands_token
        uses: actions/create-github-app-token@v1.8.1
        with:
          app-id: ${{ secrets.COMMAND_APP_ID }}
          private-key: ${{ secrets.COMMAND_APP_KEY }}

      - name: Run cmd.sh
        id: bench
        env:
          CMD: ${{ steps.parse-args.outputs.result }} # to avoid "" around the command
        run: |
          OUTPUT=$(python3 .github/scripts/cmd/cmd.py bench --runtime kusama --pallet pallet_indices)
          echo "$OUTPUT" >> $GITHUB_OUTPUT

      - name: Comment PR (End)
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.commands_token.outputs.token }}
  #        github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `${{ steps.bench.outputs.result }}`
            console.log(output)
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Benchmark finished! Output: ${output} [Link to pipeline](${context.runId})`
            })

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Update from benchmark" -a
          git push origin HEAD:refs/heads/${{ github.head_ref }}
          
